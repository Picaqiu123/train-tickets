{"version":3,"sources":["tools/Tools.js","components/button/Button.js","pages/login-register-page/Login.js","pages/login-register-page/Register.js","components/header/Header.js","components/navigator/Navigator.js","pages/train-page/city-select/CitySelect.js","pages/train-page/train-select/TrainSelect.js","pages/train-page/transfer-select/TransferSelect.js","pages/train-page/train-detail/TrainDetail.js","pages/train-page/train/Train.js","pages/order-page/order-select/OrderSelect.js","pages/order-page/order-detail/OrderDetail.js","pages/order-page/order/Order.js","pages/user-page/user-detail/UserDetail.js","pages/user-page/user/User.js","router/Router.js","App.js","serviceWorker.js","index.js"],"names":["Tools","toPostPara","obj","output","item","hasOwnProperty","substring","length","Button","props","react_default","a","createElement","className","class","onClick","text","Login","user","username","password","loginInformationChange","e","type","target","getAttribute","value","placeholder","data-id","onChange","components_button_Button","console","log","fetch","method","mode","headers","Content-Type","body","then","res","json","statusCode","localStorage","setItem","content","window","location","href","alert","Register","idcard","telephone","Header","Navigator","CitySelect","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fromChange","fromSelect","toChange","toSelect","dateChange","dateSelect","queryTrain","para","fromCity","city","toCity","date","setTrainList","outputList","JSON","parse","queryTransfer","setTransferList","bind","assertThisInitialized","defaultValue","React","Component","TrainSelectTitle","TrainSelectDetail","buyFirstClassTickets","buyTickets","firstClassSeat","buySecondClassTickets","secondClassSeat","seat","getItem","train","userId","passengerId","userName","trainId","trainName","carriage","seatType","seatId","seatLocation","startTime","startStopId","startIndex","startStationName","start","endStopId","endIndex","endStationName","end","createAt","status","order","state","first","second","_this2","fromStopId","toStopId","_step","_iterator","_createForOfIteratorHelper","s","n","done","push","err","f","setState","TrainSelect","listItems","trainList","map","index","TrainSelect_TrainSelectDetail","key","TrainSelect_TrainSelectTitle","TransferSelectDetail","transfer","firstTname","transferStation","secondTname","TransferSelect","transferList","TransferSelect_TransferSelectDetail","TrainDetail","trainSelectComponent","transferSelectComponent","train_page_train_select_TrainSelect","train_page_transfer_select_TransferSelect","train_page_city_select_CitySelect","Train","components_header_Header","navigator_Navigator","train_detail_TrainDetail","OrderSelectTitle","OrderSelectDetail","orderId","OrderDetail","orderList","orderItems","OrderSelect_OrderSelectDetail","OrderSelect_OrderSelectTitle","Order","order_page_order_detail_OrderDetail","UserDetail","userInformationChange","User","user_detail_UserDetail","Router","react_router_dom","react_router","exact","path","component","App","router_Router","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65e38917.chunk.js","sourcesContent":["// 将对象转换为post请求参数的方法\nconst Tools = {\n  toPostPara: (obj) => {\n    let output = '';\n    for (const item in obj) {\n      if (obj.hasOwnProperty(item)) {\n        output = output + item + '=' + obj[item] + '&'\n      }\n    }\n    return output.substring(0, output.length - 1);\n  }\n};\n\nexport default Tools;\n","import React from 'react';\nimport './Button.css';\n\nconst Button = (props) => {\n  return (\n    <div className={props.class} onClick={props.onClick}> {props.text} </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport Tools from '../../tools/Tools'\nimport './LoginRegister.css'\nimport Button from \"../../components/button/Button\";\n\nconst Login = () => {\n  let user = {\n    username: '',\n    password: ''\n  };\n  \n  const loginInformationChange = (e) => {\n    const type = e.target.getAttribute('data-id');\n    user[type] = e.target.value;\n  };\n  \n  const login = () => {\n    console.log('user login');\n    fetch('./login',{\n      method:'post',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: Tools.toPostPara(user)\n    })\n      .then(res=>res.json())\n      .then(json => {\n        console.log('login', json);\n        if (json.statusCode === '1000') {\n          localStorage.setItem(\"user\", json.content);\n          window.location.href = '#/train';\n        } else if (json.statusCode === '1001') {\n          alert('您被限制购票');\n        } else {\n          alert('您输入的账号密码不正确')\n        }\n      })\n  };\n  \n  const goRegister = () => {\n    window.location.href = '#/register'\n  };\n  \n  return (\n    <div className='login'>\n      <div className='login-title'> 数据库课设-12307火车售票-登录 </div>\n      <input className='login-input' placeholder='用户名' data-id='username' onChange={loginInformationChange}/>\n      <input className='login-input' placeholder='密码' data-id='password' onChange={loginInformationChange}/>\n      <Button class={'login-button'} onClick={login} text={'登录'}/>\n      <div className='go-register' onClick={goRegister}> 点击此处注册新用户 </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport Tools from '../../tools/Tools';\nimport './LoginRegister.css'\nimport Button from \"../../components/button/Button\";\n\nconst Register = () => {\n  let user = {\n    username: '',\n    idcard: '',\n    password: '',\n    telephone: ''\n  };\n  \n  const loginInformationChange = (e) => {\n    const type = e.target.getAttribute('data-id');\n    user[type] = e.target.value;\n  };\n  \n  const register = () => {\n    console.log('user register');\n    fetch('./register',{\n      method:'post',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: Tools.toPostPara(user)\n    })\n      .then(res=>res.json())\n      .then(json => {\n        console.log('register', json);\n        if (json.statusCode === '1000') {\n          localStorage.setItem(\"user\", json.content);\n          window.location.href = '#/train';\n        } else {\n          alert('出错啦')\n        }\n      })\n  };\n  \n  const goLogin = () => {\n    window.location.href = '#/login'\n  };\n  \n  return (\n    <div className='login'>\n      <div className='login-title'> 数据库课设-12307火车售票-注册 </div>\n      <input className='login-input' placeholder='用户名' data-id='username' onChange={loginInformationChange}/>\n      <input className='login-input' placeholder='密码' data-id='password' onChange={loginInformationChange}/>\n      <input className='login-input' placeholder='身份证号' data-id='idcard' onChange={loginInformationChange}/>\n      <input className='login-input' placeholder='手机号' data-id='telephone' onChange={loginInformationChange}/>\n      <Button class={'login-button'} onClick={register} text={'注册'}/>\n      <div className='go-register' onClick={goLogin}> 点击此处返回注册页面 </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from 'react';\nimport './Header.css';\nimport Button from \"../button/Button\";\n\nconst Header = () => {\n  const quit = () => {\n    window.location.href = '#/login'\n  };\n  \n  return (\n    <div className='header'>\n      <div className='title'>12307-火车票售票系统</div>\n      <Button class={'quit'} onClick={quit} text={'退出'}/>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './Navigator.css';\n\nfunction Navigator() {\n  function clickNavigator(e) {\n    const type = e.target.getAttribute('data-id');\n    switch (type) {\n      case '车票':\n        window.location.href='#/train';\n        break;\n      case '订单':\n        window.location.href='#/order';\n        break;\n      case '我的':\n        window.location.href='#/user';\n        break;\n      default:\n        break;\n    }\n  }\n  return (\n    <div className='navigator' onClick={clickNavigator}>\n      <div className='navigator-content' data-id='车票'> 车票 </div>\n      <div className='navigator-content' data-id='订单'> 订单 </div>\n      <div className='navigator-content' data-id='我的'> 我的 </div>\n    </div>\n  );\n}\n\nexport default Navigator;\n","import React from 'react';\nimport './CitySelect.css';\nimport Button from '../../../components/button/Button';\nimport Tools from \"../../../tools/Tools\";\n\nclass CitySelect extends React.Component {\n  constructor (props) {\n    super(props);\n    this.city = ['沈阳', '济南', '深圳', '北京', '上海', '广州', '长春'];\n    this.date = ['2019-01-01', '2019-01-02', '2019-01-03'];\n    this.fromSelect = 0;\n    this.toSelect = 0;\n    this.dateSelect = 0;\n    this.fromChange = this.fromChange.bind(this);\n    this.toChange = this.toChange.bind(this);\n    this.dateChange = this.dateChange.bind(this);\n    this.queryTrain = this.queryTrain.bind(this);\n  }\n  \n  fromChange = (e) => {\n    this.fromSelect = e.target.value;\n  };\n  \n  toChange = (e) => {\n    this.toSelect = e.target.value;\n  };\n  \n  dateChange = (e) => {\n    this.dateSelect = e.target.value;\n  };\n  \n  queryTrain = () => {\n    const para = {\n      fromCity: this.city[this.fromSelect],\n      toCity: this.city[this.toSelect],\n      date: this.date[this.dateSelect]\n    };\n  \n    if (this.fromSelect !== this.toSelect) {\n      this.props.setTrainList([]);\n      \n      // 请求查询接口\n      fetch('./getTrainByStop',{\n        method:'post',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: Tools.toPostPara(para)\n      })\n        .then(res => res.json())\n        .then(json => {\n          console.log('getTrainByStop', json);\n          if (json.statusCode === '1000') {\n            const outputList = JSON.parse(json.content);\n            this.props.setTrainList(outputList, this.date[this.dateSelect]);\n            \n            if (outputList.length === 0) {\n              alert('无查询结果');\n            }\n          } else {\n            alert('出错啦');\n          }\n        });\n    } else {\n      alert('不可以选择同一个地点');\n    }\n  };\n  \n  queryTransfer = () => {\n    const para = {\n      fromCity: this.city[this.fromSelect],\n      toCity: this.city[this.toSelect],\n      date: this.date[this.dateSelect]\n    };\n  \n    if (this.fromSelect !== this.toSelect) {\n      this.props.setTrainList([]);\n  \n      // 请求换乘接口\n      fetch('./getTransfer', {\n        method: 'post',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: Tools.toPostPara(para)\n      })\n        .then(res => res.json())\n        .then(json => {\n          console.log('getTransfer', json);\n          if (json.statusCode === '1000') {\n            const outputList = JSON.parse(json.content);\n            this.props.setTransferList(outputList);\n  \n            if (outputList.length === 0) {\n              alert('无查询结果');\n            }\n          } else {\n            alert('出错啦');\n          }\n        });\n    } else {\n      alert('不可以选择同一个地点');\n    }\n  };\n  \n  render() {\n    return (\n      <div className='city-select'>\n        <select className='city-selector' defaultValue='0' onChange={this.fromChange}>\n          <option value ='0'> {this.city[0]} </option>\n          <option value ='1'> {this.city[1]} </option>\n          <option value ='2'> {this.city[2]} </option>\n          <option value ='3'> {this.city[3]} </option>\n          <option value ='4'> {this.city[4]} </option>\n          <option value ='5'> {this.city[5]} </option>\n          <option value ='6'> {this.city[6]} </option>\n        </select>\n        <div className='city-selector-content'> 至 </div>\n        <select className='city-selector' defaultValue='0' onChange={this.toChange}>\n          <option value ='0'> {this.city[0]} </option>\n          <option value ='1'> {this.city[1]} </option>\n          <option value ='2'> {this.city[2]} </option>\n          <option value ='3'> {this.city[3]} </option>\n          <option value ='4'> {this.city[4]} </option>\n          <option value ='5'> {this.city[5]} </option>\n          <option value ='6'> {this.city[6]} </option>\n        </select>\n        <select className='city-selector' defaultValue='0' onChange={this.dateChange}>\n          <option value ='0'> {this.date[0]} </option>\n          <option value ='1'> {this.date[1]} </option>\n          <option value ='2'> {this.date[2]} </option>\n        </select>\n        <Button class={'train-tickets-button-default'} text={'查询'} onClick={this.queryTrain}/>\n        <Button class={'train-tickets-button-default'} text={'换乘查询'} onClick={this.queryTransfer}/>\n      </div>\n    );\n  }\n}\n\nexport default CitySelect;\n","import React from 'react';\nimport './TrainSelect.css'\nimport Button from '../../../components/button/Button';\nimport Tools from '../../../tools/Tools';\n\nconst TrainSelectTitle = () => {\n  return (\n    <div className='train-select-detail'>\n      <div className='train-select-item'> 火车号</div>\n      <div className='train-select-item'> 发车时间 </div>\n      <div className='train-select-item'> 票价 </div>\n      <div className='train-select-item'> 一等座 </div>\n      <div className='train-select-item'> 二等座 </div>\n      <div className='train-select-item'>  </div>\n      <div className='train-select-item'>  </div>\n    </div>\n  );\n};\n\nclass TrainSelectDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.firstClassSeat = [];\n    this.secondClassSeat = [];\n    this.buyTickets = this.buyTickets.bind(this);\n    this.state = {\n      first: '',\n      second: ''\n    };\n  }\n  \n  // 组件刚挂载时需要先获取到余票情况\n  componentDidMount() {\n    const para = {\n      trainId: this.props.train.trainId,\n      date: this.props.date,\n      fromStopId: this.props.train.startIndex,\n      toStopId: this.props.train.endIndex\n    };\n  \n    fetch('./getRemainSeats', {\n      method: 'post',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: Tools.toPostPara(para)\n    })\n      .then(res => res.json())\n      .then(json => {\n        console.log('getRemainSeats', json);\n        if (json.statusCode === '1000') {\n          this.firstClassSeat = [];\n          this.secondClassSeat = [];\n        \n          const seats = JSON.parse(json.content);\n        \n          for (const item of seats) {\n            if (item.seatType === '一等座') {\n              this.firstClassSeat.push(item);\n            } else if (item.seatType === '二等座') {\n              this.secondClassSeat.push(item);\n            }\n          }\n        \n          this.setState({\n            first: this.firstClassSeat.length,\n            second: this.secondClassSeat.length\n          });\n        } else {\n          alert('出错啦');\n        }\n      });\n  }\n  \n  // 点击购买一等票\n  buyFirstClassTickets = () => {\n    this.buyTickets(this.firstClassSeat[0]);\n  };\n  \n  // 点击购买二等票\n  buySecondClassTickets = () => {\n    this.buyTickets(this.secondClassSeat[0])\n  };\n  \n  // 点击购票\n  buyTickets = (seat) => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    const train = this.props.train;\n    const date = this.props.date;\n    \n    const para = {\n      userId: user.userId,\n      passengerId: user.idcard,\n      userName: user.userName,\n      trainId: train.trainId,\n      trainName: train.trainName,\n      carriage: seat.carriage,\n      seatType: seat.seatType,\n      seatId: seat.seatId,\n      seatLocation: seat.seatLocation,\n      startTime: train.startTime,\n      startStopId: train.startIndex,\n      startStationName: train.start,\n      endStopId: train.endIndex,\n      endStationName: train.end,\n      date: date,\n      createAt: '2018-12-31',\n      status: '已付款'\n    };\n    console.log(Tools.toPostPara(para));\n    \n    fetch('./lockSeat', {\n      method: 'post',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: Tools.toPostPara(para)\n    })\n      .then(res => res.json())\n      .then(json => {\n        console.log('lockSeat', json);\n        if (json.statusCode === '1000') {\n          const order = JSON.parse(json.content);\n          alert('您已成功购买 '+ order.date + '的' + order.trainName + '次列车，您的座位是' + order.carriage + '车' + order.seatLocation);\n          window.location.href = '#/order';\n        } else {\n          alert('出错啦');\n        }\n      });\n  };\n  \n  render() {\n    return (\n      <div className='train-select-detail'>\n        <div className='train-select-item'> {this.props.train.trainName} </div>\n        <div className='train-select-item'> {this.props.train.startTime} </div>\n        <div className='train-select-item'> {this.props.date} </div>\n        <div className='train-select-item'> {this.state.first} </div>\n        <div className='train-select-item'> {this.state.second} </div>\n        <Button class={'train-tickets-button-default'} text={'一等座购票'} onClick={this.buyFirstClassTickets}/>\n        <Button class={'train-tickets-button-default'} text={'二等座购票'} onClick={this.buySecondClassTickets}/>\n      </div>\n    );\n  }\n}\n\nconst TrainSelect = (props) => {\n  // 遍历数组添加组件\n  const listItems = props.trainList.map((item, index) =>\n    <TrainSelectDetail key={index} train={item} date={props.date}/>\n  );\n\n  return (\n    <div className='train-select'>\n      <div className='train-select-title'> 查询结果： </div>\n      <TrainSelectTitle/>\n      <div> {listItems} </div>\n    </div>\n  );\n};\n\nexport default TrainSelect;\n","import React from 'react';\nimport './TransferSelect.css';\n\nconst TransferSelectDetail = (props) => {\n  return (\n    <div className='transfer-select-detail'>\n      <div className='transfer-select-item'> {props.transfer.firstTname} </div>\n      <div className='transfer-select-item'> --> </div>\n      <div className='transfer-select-item'> {props.transfer.transferStation} </div>\n      <div className='transfer-select-item'> --> </div>\n      <div className='transfer-select-item'> {props.transfer.secondTname} </div>\n    </div>\n  );\n};\n\nconst TransferSelect = (props) => {\n  // 遍历数组添加组件\n  const listItems = props.transferList.map((item, index) =>\n    <TransferSelectDetail key={index} transfer={item}/>\n  );\n  \n  return (\n    <div className='transfer-select'>\n      <div className='transfer-select-title'> 换乘结果： </div>\n      <div> {listItems} </div>\n    </div>\n  );\n};\n\n\nexport default TransferSelect;\n","import React from 'react';\nimport CitySelect from '../city-select/CitySelect';\nimport TrainSelect from '../train-select/TrainSelect';\nimport TransferSelect from '../transfer-select/TransferSelect';\n\nclass TrainDetail extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {trainList: [], transferList: [], date: ''};\n    this.setTrainList = this.setTrainList.bind(this);\n  }\n  \n  // CitySelect组件传回值的方法\n  setTrainList = (trainList, date) => {\n    this.setState({\n      trainList: trainList,\n      date: date,\n      transferList: []\n    });\n  };\n  \n  // CitySelect组件传回值的方法\n  setTransferList = (transferList) => {\n    this.setState({\n      trainList: [],\n      date: '',\n      transferList: transferList\n    });\n  };\n  \n  render () {\n    let trainSelectComponent = null;\n    let transferSelectComponent = null;\n    if (this.state.trainList.length > 0) {\n      trainSelectComponent = <TrainSelect trainList={this.state.trainList} date={this.state.date}/>;\n    }\n    if (this.state.transferList.length > 0) {\n      transferSelectComponent = <TransferSelect transferList={this.state.transferList}/>;\n    }\n    return (\n      <div className='train'>\n        <CitySelect setTrainList={this.setTrainList} setTransferList={this.setTransferList}/>\n        {trainSelectComponent}\n        {transferSelectComponent}\n      </div>\n    );\n  }\n}\n\nexport default TrainDetail;\n","import React from 'react';\nimport Header from '../../../components/header/Header';\nimport Navigator from '../../../components/navigator/Navigator';\nimport TrainDetail from '../train-detail/TrainDetail';\nimport './Train.css'\n\nconst Train = () => (\n  <div className='homepage'>\n    <Header/>\n    <div className='content'>\n      <Navigator/>\n      <TrainDetail/>\n    </div>\n  </div>\n);\n\nexport default Train;\n","import Button from '../../../components/button/Button';\nimport React from 'react';\nimport './OrderSelect.css';\nimport Tools from \"../../../tools/Tools\";\n\nconst OrderSelectTitle = () => {\n  return (\n    <div className='order-select-detail'>\n      <div className='order-select-item'> 火车号 </div>\n      <div className='order-select-item'> 发车日 </div>\n      <div className='order-select-item'> 发车时间 </div>\n      <div className='order-select-item'> 起止地点 </div>\n      <div className='order-select-item'> 车厢 </div>\n      <div className='order-select-item'> 座位号 </div>\n      <div className='order-select-item'>  </div>\n    </div>\n  );\n};\n\nconst OrderSelectDetail = (props) => {\n  const deleteOrder = () => {\n    const para = {\n      orderId: props.order.orderId,\n    };\n  \n    fetch('./deleteOrder', {\n      method: 'post',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: Tools.toPostPara(para)\n    })\n      .then(res => res.json())\n      .then(json => {\n        console.log('deleteOrder', json);\n        if (json.statusCode === '1000') {\n          alert('删除成功');\n          window.location.href = '#/train';\n        } else {\n          alert('出错啦');\n        }\n      });\n  };\n  \n  return (\n    <div className='order-select-detail'>\n      <div className='order-select-item'> {props.order.trainName} </div>\n      <div className='order-select-item'> {props.order.date} </div>\n      <div className='order-select-item'> {props.order.startTime} </div>\n      <div className='order-select-item'> {props.order.startStationName + '-' + props.order.endStationName} </div>\n      <div className='order-select-item'> {props.order.carriage} </div>\n      <div className='order-select-item'> {props.order.seatLocation} </div>\n      <Button class={'train-tickets-button-default'} text={'退票'} onClick={deleteOrder}/>\n    </div>\n  );\n};\n\nexport {\n  OrderSelectDetail,\n  OrderSelectTitle\n};\n","import React from 'react';\nimport './OrderDetail.css';\nimport Tools from '../../../tools/Tools';\nimport {OrderSelectTitle, OrderSelectDetail} from '../order-select/OrderSelect';\n\nclass OrderDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderList: []\n    }\n  }\n  \n  // 组件刚挂载时需要先获取到余票情况\n  componentDidMount() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const para = {\n      idcard: user.idcard,\n    };\n    \n    fetch('./queryOrder', {\n      method: 'post',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: Tools.toPostPara(para)\n    })\n      .then(res => res.json())\n      .then(json => {\n        console.log('queryOrder', json);\n        if (json.statusCode === '1000') {\n          this.setState({\n            orderList: JSON.parse(json.content)\n          });\n        } else {\n          alert('出错啦');\n        }\n      });\n  }\n  \n  render () {\n    const orderItems = this.state.orderList.map((order, index) =>\n      <OrderSelectDetail order={order} key={index}/>\n    );\n    \n    return (\n      <div className='order-detail'>\n        <OrderSelectTitle/>\n        {orderItems}\n      </div>\n    );\n  }\n}\n\nexport default OrderDetail;\n","import React from 'react';\nimport Header from '../../../components/header/Header';\nimport Navigator from '../../../components/navigator/Navigator';\nimport './Order.css'\nimport OrderDetail from '../order-detail/OrderDetail';\n\nconst Order = () => (\n  <div className='homepage'>\n    <Header/>\n    <div className='content'>\n      <Navigator/>\n      <OrderDetail/>\n    </div>\n  </div>\n);\n\nexport default Order;\n","import React from 'react';\nimport './UserDetail.css';\nimport Button from '../../../components/button/Button';\nimport Tools from '../../../tools/Tools';\n\nfunction UserDetail() {\n  const user = JSON.parse(localStorage.getItem('user'));\n  \n  function userInformationChange(e) {\n    const type = e.target.getAttribute('data-id');\n    user[type] = e.target.value;\n  }\n  \n  function updateUser() {\n    console.log('update user');\n    fetch('./updateUser',{\n      method:'post',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: Tools.toPostPara(user)\n    })\n      .then(res=>res.json())\n      .then(json=>{\n        console.log('updateUser', json);\n        alert('修改成功');\n      })\n  }\n  \n  return (\n    <div className='user'>\n      <input className='user-input' placeholder={'用户名 初始值为: ' + user.userName} data-id='username' onChange={userInformationChange}/>\n      <input className='user-input' placeholder={'密码 初始值为: ' + user.password} data-id='password' onChange={userInformationChange}/>\n      <input className='user-input' placeholder={'电话号码 初始值为: ' + user.telephone} data-id='telephone' onChange={userInformationChange}/>\n      <input className='user-input' placeholder={'身份证号 初始值为: ' + user.idcard} data-id='idcard' onChange={userInformationChange}/>\n      <div className='status-select'>\n        <div className='status-select-text'> 选择用户状态： </div>\n        <select className='status-select-content' data-id='status' defaultValue='正常' onChange={userInformationChange}>\n          <option value ='正常'> 正常 </option>\n          <option value ='限制购票'> 限制购票 </option>\n        </select>\n      </div>\n      <Button class={'update-user'} text={'修改'} onClick={updateUser}/>\n      <div className='tips'> 这里的修改仅作为功能演示，为了其他功能的正常运行，不应该对身份证号和用户名进行更改 </div>\n    </div>\n  );\n}\n\nexport default UserDetail;\n","import React from 'react';\nimport Header from '../../../components/header/Header';\nimport Navigator from '../../../components/navigator/Navigator';\nimport UserDetail from '../user-detail/UserDetail';\nimport './User.css'\n\nconst User = () => (\n  <div className='homepage'>\n    <Header/>\n    <div className='content'>\n      <Navigator/>\n      <UserDetail/>\n    </div>\n  </div>\n);\n\nexport default User;\n","import React from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport Login from '../pages/login-register-page/Login';\nimport Register from '../pages/login-register-page/Register';\nimport Train from '../pages/train-page/train/Train';\nimport Order from '../pages/order-page/order/Order';\nimport User from '../pages/user-page/user/User';\n\n\nconst Router = () => (\n  <HashRouter>\n    <Switch>\n      <Route exact path='/' component={Login}/>\n      <Route exact path='/login' component={Login}/>\n      <Route exact path='/register' component={Register}/>\n      <Route exact path='/train' component={Train}/>\n      <Route path='/order' component={Order}/>\n      <Route path='/user' component={User}/>\n    </Switch>\n  </HashRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport './App.css';\nimport Router from './router/Router';\n\nconst App = () => {\n  return (\n    <div className='app'>\n      <Router/>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlocalStorage.setItem(\"user\", \"{}\");\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}